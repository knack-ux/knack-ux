name: Push To Master

on: 
  push:
    branches:
      - master

jobs:
  build:
    name: Build, Lint and Publish
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v1

      - name: Configure Git
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_REGISTRY_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git;
          git checkout master;
          git status;
          git config --global user.email "kristiyan.serafimov@gmail.com";
          git config --global user.name "Kristiyan Serafimov";
  
      - run: git status
      - run: git log
      - run: git tag

      - name: Setup node
        uses: actions/setup-node@v1

      - run: yarn install
      - run: yarn lerna bootstrap

      - name: Build all the packages
        run: yarn lerna run build:doc --stream --ignore @chrispcode/knack-storybook
      
      - run: yarn lint

      - name: Update versions and changelogs
        run: yarn lerna version -y

      - name: Push to Master
        run: git push --follow-tags --set-upstream origin master

      - name: Build Storybook
        run: yarn lerna run build --stream --scope @chrispcode/knack-storybook
      
      - name: Extract Storybook version
        run: yarn version:storybook

      - name: Echo Storybook version
        run: echo $(cat _STORYBOOK_VERSION)

      - name: Build Storybook Dockerfile
        run: >-
          docker build -f docker/storybook.Dockerfile
          -t docker.pkg.github.com/chrispcode/knack/storybook:$(cat _STORYBOOK_VERSION)
          -t docker.pkg.github.com/chrispcode/knack/storybook .
          -t registry.heroku.com/knack-ui/web

      - name: Authenticate to GitHub Registry
        run: >- 
          docker login 
          -u chirspcode
          -p ${{ secrets.GITHUB_REGISTRY_TOKEN }}
          docker.pkg.github.com 

      - name: Push Storybook to Github Registry
        run: docker push docker.pkg.github.com/chrispcode/knack/storybook:$(cat _STORYBOOK_VERSION)

      - name: Authenticate to Heroku Registry
        run: >- 
          docker login 
          -u _
          -p ${{ secrets.HEROKU_API_KEY }}
          registry.heroku.com 

      - name: Push Storybook to Heroku Registry
        run: docker push registry.heroku.com/knack-ui/web

      - name: Auhenticate to Heroku App
        uses: actions/heroku@master
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        with:
          args: container:login

      - name: Upload new version of Storybook to Heroku
        uses: actions/heroku@master
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        with:
          args: container:release web -a knack-ui   
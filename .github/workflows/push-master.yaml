name: Push To Master

on: 
  push:
    branches:
      - master

jobs:
  build:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    name: Build, Lint and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Configure Git
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git;
          git checkout master;
          git status;
          git config --global user.email "kristiyan.serafimov@gmail.com";
          git config --global user.name "Hubot Bender";
  
      - run: git status
      - run: git log

      - name: Setup node
        uses: actions/setup-node@v1

      - run: yarn install --pure-lockfile
      - run: yarn lerna bootstrap

      - name: Build all packages with docs
        run: yarn lerna run build:doc --stream --ignore @knack-ux/storybook
      
      - run: yarn lint

      - name: Update versions and changelogs
        run: yarn lerna version -y

      - name: Build Storybook
        run: yarn lerna run build --stream --scope @knack-ux/storybook
      
      - name: Extract Storybook version
        run: yarn version:storybook

      - name: Echo Storybook version
        run: echo $(cat _STORYBOOK_VERSION)

      - name: Build Storybook Dockerfile
        run: >-
          docker build -f docker/storybook.Dockerfile
          -t docker.pkg.github.com/knack-ux/knack-ux/storybook:$(cat _STORYBOOK_VERSION)
          -t docker.pkg.github.com/knack-ux/knack-ux/storybook:latest .

      - name: Authenticate to GitHub Registry
        run: >- 
          docker login 
          -u chirspcode
          -p ${{ secrets.GITHUB_TOKEN }}
          docker.pkg.github.com 

      - name: Push Storybook to Github Registry
        run: docker push docker.pkg.github.com/knack-ux/knack-ux/storybook:$(cat _STORYBOOK_VERSION)

      - name: Push to Master
        run: git push --follow-tags --set-upstream origin master
      
      - name: Build all packages for production
        run: yarn lerna run build --stream --ignore @knack-ux/storybook

      - name: Set config pointing to Github Registry
        run: npm config set @knack-ux:registry https://npm.pkg.github.com;  

      - name: Auth to npm Github Registry
        run: npm set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }};

      - name: Push packages to Github NPM Registry
        run: yarn lerna publish from-package --no-verify-access -y;

      - run: yarn global add firebase-tools

      - name: Deploy to Firebase Hosting
        run: firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}

  complete:
    name: Complete
    runs-on: ubuntu-latest
    steps:
      - name: Complete
        run: echo "Completed has been the build! - Master Yoda"